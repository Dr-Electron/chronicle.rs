# chronicle-[alpha/beta/etc.]-v[x.x.x].[ext]
[version]
version = "chronicle-alpha-v0.2.2"
service = "Permanode"

# logger settings
[logger]
color = true
[[logger.outputs]]
name  = "stdout"
level = "info"

# More details: https://docs.scylladb.com/getting-started/ddl/
[scylla_cluster]
addresses = ["172.17.0.2:9042"] # scylla docker instance
replication_factor_per_data_center = 1
data_centers = ["datacenter1"]
local_dc = "datacenter1"
# check scylla docs to how change/modify and create ROLEs
auth.user = "cassandra"
auth.pass = "cassandra"
# dmp file links: https://dbfiles.iota.org/?prefix=mainnet/history/
# [["file_path1", milestone1], ["file_path2", milestone2], ...]
[dmp_files]
files = []
import_only_confirmed_transactions = true
max_retries = 1000

[tokio]
core_threads = 2 # should use even number > 2

[storage]
dashboard_websocket = "0.0.0.0:8080"

[api]
endpoint = "0.0.0.0:4000"
content_length = 65535

[broker]
trytes_nodes = ["tcp://mqtt.iota.org:1883"]
conf_trytes_nodes = ["tcp://mqtt.iota.org:1883"]
stream_capacity = 10000 # buffer up to 10k transactions per node
max_retries = 100 # There is +1 sec delay between each retry. therefore the max delay is sum of 1 up to max_retries.
# note: max_retries defined per transaction and only occur when a node in scylla cluster is overloaded or dead.
# that's why the retry will use global strategy to select random replica in any datacenter.
# for example: max_retries = 10
# the delay to consume all of them for a given transaction is 1+2+3+4+5+6+7+8+9+10 = 55 seconds.
